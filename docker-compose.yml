services:
  db:
    image: postgres:15
    container_name: fastapi_db
    restart: always
    env_file: .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 2s
      retries: 5


  redis:
    image: redis:7
    container_name: redis
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    volumes:
      - ./redis:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 2s
      retries: 5


  backend:
    build:
      context: ./backend
    container_name: fastapi_app
    env_file: .env
    volumes:
      - ./backend:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis

  frontend:
    build:
      context: ./frontend
    container_name: angular_front
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
    depends_on:
      - backend

  worker:
    build:
      context: ./worker
    container_name: worker
    env_file: .env
    depends_on:
      - redis
      - db

volumes:
  db_data:
